#hw03: 8. String to Integer (atoi) - LeetCode
class Solution:
    def myAtoi(self, s: str) -> int:
    #edge case
        if len(s) == 0:
            return 0
        i = 0  
        answer_str = ""
        negative_flag = 1
        #step 1
        while(i < len(s) and s[i] == ' '):#first skip the whitespaces
            i+=1
        #step 2 handling signs
        if i < len(s):
            if s[i] == '-':
                negative_flag = -1
                i+=1
            elif s[i] == '+':
                i+=1

        while(i < len(s)and s[i].isdigit()):
                answer_str += s[i]
                i+= 1
        #step 4
        result = negative_flag* int(answer_str) if answer_str else 0
        if -(2**31) <=result<= (2**31)-1:
            return result
        elif result > (2**31)-1:
            return (2**31)-1
        elif result< -(2**31):
            return -(2**31)
#hw03: Longest Repeating Character Replacement - LeetCode  
class Solution2:
    def characterReplacement(self, s: str, k: int) -> int:
        front_ind = 0
        nonequal_ind = 0
        i = 0
        window_length = 0
        max_lengths = [1]
        while i < len(s):
            if s[front_ind] == s[i]:
                window_length += 1
                i+=1
            elif nonequal_ind < k:
                nonequal_ind += 1
                window_length += 1
                i+=1
            else:
                max_lengths.append(window_length)
                front_ind += 1
                i = front_ind
                nonequal_ind = 0
                window_length = 0
        if window_length+k >= len(s):
            max_lengths.append(len(s))
        max_lengths.append(window_length)
        return max(max_lengths)
        


