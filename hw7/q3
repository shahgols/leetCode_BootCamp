class Solution:
    def maxSubArray(self, nums: List[int]) -> int:

        def findMaxCrossingSubarray(nums, left, mid, right):

            leftSum = 0
            mySum = 0
            leftMax = nums[mid]
            for i in range(mid, left - 1, -1):
                mySum += nums[i]
                if mySum > leftMax:
                    leftMax = mySum
            leftSum = leftMax
            
            rightSum = 0
            mySum = 0
            rightMax = nums[mid + 1]
            for i in range(mid + 1, right + 1):
                mySum += nums[i]
                if mySum > rightMax:
                    rightMax = mySum
            rightSum = rightMax
            return leftSum + rightSum
        
        def maxSubArrayRec(nums, left, right):
            if left == right:
                return nums[left]
            mid = (left + right) // 2
            leftMax = maxSubArrayRec(nums, left, mid)
            rightMax = maxSubArrayRec(nums, mid + 1, right)
            midMax = findMaxCrossingSubarray(nums, left, mid, right)

            return max(leftMax, rightMax, midMax)
        return maxSubArrayRec(nums, 0, len(nums) - 1)
